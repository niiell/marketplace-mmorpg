openapi: 3.0.0
info:
  title: Marketplace MMORPG SEA API
  version: 1.0.0
  description: API for MMORPG marketplace platform supporting item trading, services, and gold exchange

servers:
  - url: https://marketplace-mmorpg.vercel.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
    ListingBase:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category_id:
          type: integer
        game_id:
          type: integer
        type:
          type: string
          enum: [item, gold, jasa]
        price:
          type: number
        stock:
          type: integer
        image_url:
          type: string
    Transaction:
      type: object
      properties:
        id:
          type: string
        buyer_id:
          type: string
        seller_id:
          type: string
        listing_id:
          type: integer
        amount:
          type: number
        status_order:
          type: string
        status_payment:
          type: string
        created_at:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Registration successful
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /listings:
    get:
      summary: List all listings
      parameters:
        - in: query
          name: category
          schema:
            type: integer
        - in: query
          name: game
          schema:
            type: integer
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: List of listings
    post:
      summary: Create new listing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingBase'
      responses:
        '201':
          description: Listing created
        '401':
          description: Unauthorized

  /listings/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: Get listing details
      responses:
        '200':
          description: Listing details
        '404':
          description: Listing not found
    put:
      summary: Update listing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingBase'
      responses:
        '200':
          description: Listing updated
        '401':
          description: Unauthorized
        '404':
          description: Listing not found

  /checkout:
    post:
      summary: Create checkout session
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: integer
                quantity:
                  type: integer
      responses:
        '200':
          description: Checkout session created
        '400':
          description: Invalid input
        '401':
          description: Unauthorized

  /xendit/webhook:
    post:
      summary: Xendit payment webhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                external_id:
                  type: string
      responses:
        '200':
          description: Webhook processed
        '401':
          description: Invalid signature

  /transaction/approve:
    post:
      summary: Approve transaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
      responses:
        '200':
          description: Transaction approved
        '401':
          description: Unauthorized

  /transaction/deliver:
    post:
      summary: Mark transaction as delivered
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction_id:
                  type: string
      responses:
        '200':
          description: Transaction marked as delivered
        '401':
          description: Unauthorized