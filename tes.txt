Rencana Pengembangan Website
Marketplace MMORPG SEA
1. Latar Belakang & Tujuan Proyek
Website yang direncanakan adalah platform marketplace jual-beli item/game/gold dan
jasa untuk game MMORPG, menargetkan pemain di kawasan Asia Tenggara. Pengguna
dapat mendaftar/login, kemudian mengunggah daftar barang, gold, atau jasa yang
ingin dijual. Fitur kunci meliputi pencarian dan penyaringan produk, chat real-time
antara pembeli-penjual, ulasan/rating antar pengguna, dan proses transaksi dengan
sistem escrow manual. Landing page awal akan fokus pada edukasi dan branding
sebelum mengarahkan pengguna ke marketplace. Teknologi utama yang digunakan:
Next.js (React) dengan Tailwind CSS dan GSAP untuk front-end, Supabase (PostgreSQL +
Auth + Realtime + Storage) untuk back-end, serta Xendit untuk infrastruktur
pembayaran. Rencana ini mencakup desain arsitektur sistem lengkap, skema database,
fitur front-end/back-end, struktur halaman, fitur tambahan, panduan UI/UX, rekomendasi
tools, prioritas MVP, serta catatan keamanan, skalabilitas, dan kepatuhan regional.

2. Arsitektur Sistem dan Alur Transaksi

Gambar: Skema arsitektur pembayaran dan pembagian dana pada marketplace
(buyers→PSP→split→seller & marketplace)​ cobbleweb.co.uk ​ supabase.com .

Komponen Sistem: Front-end dibangun dengan Next.js yang menyediakan interaksi
pengguna (produk, chat, profil, dll). Back-end menggunakan Supabase: database
PostgreSQL, layanan Auth (GoTrue), serta Realtime (Elixir WebSocket) untuk notifikasi
dan chat​ supabase.com ​ supabase.com . File upload disimpan di Supabase Storage melalui
Uploadthing. API transaksi dan logika bisnis diimplementasi sebagai Next.js API
Routes atau fungsi Edge berbasis Deno. Helmet.js dipasang di server untuk
keamanan header HTTP​ helmetjs.github.io . Xendit sebagai Payment Service Provider (PSP)
menangani aliran dana dan split payment khusus untuk marketplace (XenPlatform).
Alur Transaksi: Saat pembeli melakukan pemesanan, sistem membuat order di
database dan mengarahkan pembeli ke pembayaran Xendit. Pembayaran dibayarkan
ke rekening penampung (escrow) Xendit hingga barang/jasa dikonfirmasi
terpenuhi. Setelah penjual menandai barang terkirim/layanan selesai, pembeli
melakukan konfirmasi penerimaan. Selanjutnya admin platform melakukan review
dan persetujuan manual transaksi. Jika disetujui, Xendit akan melepas dana kepada
penjual (dan pemotongan komisi ke marketplace)​ cobbleweb.co.uk . Sistem merekam
setiap status ini (dibayar, dikirim, diterima, disetujui) di tabel transaksi. Proses escrow
manual memastikan keamanan: seperti disarankan, “dana hanya dilepas setelah
kondisi tertentu terpenuhi”​ cobbleweb.co.uk .
Komunikasi & Notifikasi: Chat real-time (menggunakan Supabase Realtime atau
WebSocket) menghubungkan pembeli dan penjual tanpa hambatan waktu.
Notifikasi real-time (pop-up atau badge) akan muncul untuk update chat, status
order, atau permintaan persetujuan admin. Quote studi menyatakan marketplace
sangat membutuhkan chat langsung untuk membangun kepercayaan antara pihak
tak saling kenal​ quickblox.com .
Multi-Admin & Keamanan: Panel admin (terpisah) memungkinkan beberapa admin
melakukan otorisasi transaksi, memoderasi konten, dan menangani sengketa. Setiap
admin/login terverifikasi melalui Supabase Auth dengan peran role-based. Alur audit
dan logging disiapkan untuk keamanan dan kepatuhan internal.

3. Struktur Database (Desain Tabel Utama)
Rancangan database Postgres (Supabase) utama meliputi tabel-tabel berikut (ORM
Sequelize akan memetakan entitas ini):

users : Informasi pengguna (id, email, hashed password, tanggal daftar, role).

Supabase Auth mengelola otentikasi, dan relasi ke profiles untuk data tambahan.
profiles : Detail pengguna (user_id, username, avatar_url, bio, nomor telepon, dll).

Menyimpan data profil yang dapat diedit pengguna.
roles / user_roles : Menyimpan role pengguna (user biasa, admin). Mendukung

multi-admin dengan peran berbeda (misal moderator, finance).
listings (atau items ): Daftar item/gold/jasa yang dijual (id, seller_id, judul,

deskripsi, kategori, game terkait, tipe listing [item/gold/jasa], harga, stok/kuantitas,
status listing [aktif, terjual, dibanned], timestamp). Gambar/foto diunggah dengan
Uploadthing dan tautan disimpan di tabel terkait.
transactions : Rekaman transaksi (id, buyer_id, seller_id, listing_id, jumlah,

status_order, status_pembayaran, created_at, updated_at). StatusOrder enum bisa:
pending, paid, delivered, confirmed, approved, cancelled. Catat tiap perpindahan
status (pembayaran, pengiriman, persetujuan).
transaction_logs : Opsional untuk jejak perubahan status, siapa yang melakukan

perubahan (misal admin menolak persetujuan) dan timestamp.
reviews : Ulasan dan rating (id, reviewer_id, reviewee_id, transaction_id, rating (1–5),

komentar, created_at). Dapat menghasilkan reputasi pengguna. Penelitian
menunjukkan ulasan berpengaruh positif pada kepercayaan dan penjualan​
frontiersin.org

, jadi wajib ada.

chats : Entitas percakapan (id, buyer_id, seller_id, listing_id, created_at). Satu chat

per transaksi/pair mungkin.
messages : Pesan chat (id, chat_id, sender_id, isi_pesan, timestamp). Menggunakan

Supabase Realtime untuk streaming pesan instan.
notifications : Notifikasi real-time (id, user_id, tipe, konten, url_target, is_read,

created_at). Berisi info seperti “Pembayaran Anda diterima”, “Penjual mengirim
pesan”.
categories / games : Jika perlu, tabel kategori atau game untuk filter (id, nama).

Mendukung penyaringan listing berdasarkan game/jasa.

cms_posts (Contentlayer): Untuk konten halaman edukasi/branding (judul, slug, isi

markdown, metadata). Contentlayer akan mengimpor konten ini ke Next.js saat
build.
Semua data sensitif diatur kebijakan RLS (Row-Level Security) Supabase agar hanya
pemilik atau role tertentu yang dapat mengakses. Pola relasi one-to-many jelas di antara
tabel-tabel di atas.

4. Fitur Utama Front-end
Halaman Utama (Landing Page): Fokus edukasi & branding, menjelaskan cara kerja
marketplace. Navigasi jelas ke bagian “Marketplace” atau login. Animasi GSAP
membuat tampilan hero section interaktif tanpa mengorbankan performa. Penuh
CTA (Call-to-Action) untuk pendaftaran. Halaman ini dibangun statis (SSG) via
Next.js/Contentlayer.
Autentikasi: Form Daftar/Login menggunakan Supabase Auth (email/password,
opsi social login bisa ditambahkan). Setelah login, pengguna diarahkan ke
dashboard marketplace.
Dashboard Pengguna: Menu profil pribadi menampilkan ringkasan (saldo tertunda,
penjualan terakhir, dll). Dari sini, pengguna dapat melihat listing yang diunggah,
transaksi yang sedang berlangsung, dan mengedit profil. Antarmuka interaktif
dengan NextUI component (kartun menu sidebar, tabel transaksional).
Halaman Marketplace (Browse Listing): Daftar produk/item/gold/jasa terlaris atau
terbaru, dengan filter kategori/game. Setiap listing ditampilkan dalam card dengan
gambar, judul, harga, dan rating singkat. Tersedia opsi pencarian bebas teks dan
filter multifilter (harga, tipe, game, rating). Efek hover/animasi halus di listing card
ditangani GSAP/Tailwind.
Halaman Detail Item/Jasa: Menampilkan detail lengkap listing (foto galeri, deskripsi,
statistik kepercayaan penjual). Terdapat tombol “Chat dengan Penjual” dan form
pembelian. Ulasan pembeli sebelumnya akan tampil di bawah detail produk.
Fitur Upload Listing: Form interaktif untuk penjual memposting listing baru (unggah
gambar via Uploadthing, isian detail dengan validasi real-time). Proses ini responsif
dan mudah digunakan.

Chat Real-time: Setiap listing memiliki ruang chat tersendiri. Antarmuka chat
mendukung pesan teks, lampiran file kecil, dan emoji. Pesan tampil instan melalui
Supabase Realtime. Notifikasi bunyi atau badge tampil untuk pesan masuk baru.
Chat bertujuan meningkatkan kepercayaan pengguna​ quickblox.com dan
mempermudah negosiasi.
Sistem Rating & Review: Setelah transaksi selesai dan disetujui admin, kedua belah
pihak dapat saling memberi rating dan ulasan. UI sederhana berupa bintang dan
komentar. Review ini membantu calon pembeli memilih penjual terpercaya –
penelitian menegaskan ulasan berkualitas tinggi meningkatkan kepercayaan
pengguna​ frontiersin.org .
Notifikasi Real-Time: Pemberitahuan pop-up untuk setiap event penting (pesan
baru, pesanan dibayar, pengiriman, persetujuan admin). Menggunakan
WebSocket/Supabase Realtime. Hal ini menjaga pengguna terlibat dan memberi
rasa responsif pada aplikasi.
Responsif & Animasi: Desain mengikuti prinsip mobile-first. Animasi mikro (misalnya
tombol dan loading bar dengan GSAP) digunakan untuk pengalaman yang halus
dan modern. Brand warna dipilih cerah namun profesional, sesuai tema gaming.

5. Fitur Utama Back-end
Autentikasi & Otorisasi: Supabase Auth mengelola login/registrasi dan verifikasi
email. Middleware Next.js/API yang menggunakan token Supabase memastikan
hanya pengguna terotorisasi mengakses endpoint tertentu. Role “admin” ditetapkan
melalui user meta di database.
Manajemen Listing: Endpoint CRUD (dibangun di Next.js API atau PostgREST) untuk
membuat, memperbarui, dan menghapus listing. Validasi data (misalnya harga > 0)
dilakukan server-side (bisa menggunakan Sequelize validator atau Zod). Upload
gambar ke Storage diurus Uploadthing.
Proses Transaksi: Logika bisnis untuk alur beli-jual:
1. Pembuatan Pesanan: Saat pembeli checkout, buat baris baru di transactions
dengan status “paid” jika pembayaran berhasil di Xendit.
2. Notifikasi Pembayaran: Dengarkan callback webhook Xendit (via API Route)
dan perbarui status transaksi.

3. Konfirmasi Pengiriman: Endpoints bagi penjual untuk menandai pesanan telah
selesai/dikirim.
4. Konfirmasi Pembeli: Endpoint bagi pembeli mengonfirmasi penerimaan barang.
5. Persetujuan Admin: Admin panel API untuk memeriksa detail order dan
mengubah status ke “approved”. Setelah disetujui, panggil API Xendit untuk
memproses payout ke penjual.
6. Refund/Cancel: Jika terjadi sengketa, admin dapat membatalkan dan
memerintahkan pengembalian dana (Xendit API untuk refund).
Chat & Notifikasi Server: Implementasi backend minimal (menyimpan pesan ke DB).
Penggunaan Supabase Realtime berarti hampir tidak perlu API khusus; DB trigger
dapat mem-broadcast pesan ke front-end pengguna. Notifikasi push (apabila
dikehendaki) di-send via layanan push atau integrasi pihak ketiga.
Review & Rating: API untuk menyimpan ulasan setelah transaksi selesai. Hanya
dapat dilakukan sekali per transaksi. Rata-rata rating pengguna dihitung on-the-fly
atau disimpan di tabel khusus.
Email & Pemberitahuan: Integrasi dengan React Email untuk templating email
(aktivasi akun, pemberitahuan transaksi) dan MailerLite untuk newsletter branding.
Trigger email di backend (Next.js API) saat event penting (misal “pesanan Anda
dikonfirmasi”).
CMS dan Konten Statis: Contentlayer mengimpor konten MD untuk halaman
edukasi/landing (blog, panduan), serta memasukkannya ke build Next.js. Admin
dapat mengupdate konten melalui repository (branch khusus) atau halaman admin
headless CMS.
Multi-Admin & Dashboard: API khusus untuk antarmuka admin, meliputi
manajemen user (banned/spam), transaksi pending, laporan, dan pengaturan
platform. Setiap admin login menggunakan Supabase Auth dan pengecekan role.
Logging & Keamanan: Semua action kritis (login, perubahan status transaksi, dsb)
ditulis ke log (bisa menggunakan middleware logging). Proteksi CSRF, sanitasi input
SQL/NoSQL, dan rate limiting implement pada layer API (menggunakan modul
sesuai Node.js atau integrasi Cloudflare/DDoS protection). Helmet.js menerapkan
header keamanan (CSP, XSS protection) secara default​ helmetjs.github.io .

6. Struktur Halaman Website
Susunan halaman inti (user flow) meliputi:
Landing Page (Situs Utama): Halaman depan berisi informasi platform, keunggulan,
testimoni, dan tombol Daftar/Masuk. Fokus UI bersih dan hero section menarik
(animasi GSAP ringan) untuk kesan pertama yang kuat​ imaginarycloud.com .
Halaman Daftar/Login: Form sederhana. Setelah registrasi, pengguna perlu
verifikasi email (via Supabase).
Marketplace / Daftar Produk: Halaman listing utama setelah login. Navigasi
kategori, search bar, dan filter tampak jelas di bagian atas.
Halaman Detail Produk: Menampilkan gambar, deskripsi, harga, stok, serta tombol
Chat dan Beli Sekarang. Ulasan dan rating pengguna ditampilkan di bawah deskripsi.
Dashboard Profil Pengguna: Berisi informasi akun, daftar listing yang diunggah,
histori transaksi (pembelian & penjualan), dan menu pengaturan.
Halaman Upload Listing: Form untuk membuat listing baru (unggah foto/gambar,
isi detail item). Interaksi responsif, dengan progress bar upload dan validasi.
Halaman Chat: Ruang obrolan dengan antarmuka mirip messenger. Chat bisa
terbuka sebagai modal atau halaman terpisah. Menampilkan riwayat pesan dan form
input dengan tombol kirim.
Halaman Transaksi: Ringkasan detail transaksi aktif (misal: menunggu konfirmasi
pengiriman, atau konfirmasi penerimaan). Tombol aksi seperti “Konfirmasi Diterima”.
Admin Dashboard: Terpisah dari tampilan pengguna biasa. Berisi tab manajemen
transaksi (dapat melihat transaksi pending dan menyetujuinya), daftar pengguna,
laporan keuangan, serta pengaturan platform (misal komisi, kategori, dsb). Multiadmin dapat login ke sini sesuai role.
Halaman Lainnya: Kontak/Support, FAQs, Kebijakan Privasi (termasuk kepatuhan
regulator SEA), dan 404. Semua halaman responsif untuk mobile.

7. Fitur Tambahan Rekomendasi

Notifikasi Real-Time (Push): Selain notifikasi in-app, pertimbangkan push
notifications (browser/mobile) untuk event penting. Ini meningkatkan retensi
pengguna.
Resolusi Sengketa (Dispute Resolution): Form khusus untuk laporan masalah
transaksi. Proses eskalasi ke admin dengan bukti (gambar chat, screenshot). Admin
dapat membuat keputusan (refund atau payout). Menambah kepercayaan pengguna
karena ada mekanisme keamanan.
Multi-Bahasa & Lokalisasi: Target SEA artinya dukungan bahasa (Indonesia, Inggris,
Thai, dll) dan mata uang lokal. Next.js mendukung routing i18n built-in​ nextjs.org , plus
pustaka seperti next-intl untuk menerjemahkan teks. Ini meningkatkan adopsi di
berbagai negara.
Multi-Mata Uang: Tampilan harga sesuai mata uang lokal pengguna (IDR, PHP, THB,
dll). Xendit mendukung multi-currency sehingga pembayaran dan payout mengikuti
kurs.
Analitik & SEO: Integrasi Google Analytics atau alat lain untuk tracking performa.
Sitemap dinamis dan meta tag SEO dikelola Next.js untuk visibilitas mesin telusur.
Wishlist / Favorit: Fitur menandai listing favorit agar pembeli dapat kembali nanti.
Rekomendasi & Lainnya: Algoritma sederhana untuk menampilkan produk serupa
atau “yang sering dibeli bersama”.
Mobile App (Tahap Lanjut): Jika skala besar, pertimbangkan React Native atau
Flutter untuk aplikasi mobile native agar jangkauan lebih luas.
Integrasi AI Chatbot: Sebagai asisten 24/7 untuk informasi umum atau bantuan
navigasi (opsional).

8. Panduan Gaya UI/UX
Desain Modern & Interaktif: Gunakan komponen NextUI untuk tampilan konsisten
(cards, modal, tabel). Tailwind CSS memberikan fleksibilitas styling.
Animasi Halus: GSAP dipakai untuk efek transisi dan animasi (misal loading
skeleton, scroll reveal) tanpa mengganggu kinerja. Animasi meningkatkan
keprofesionalan dan “feel” platform.

Kejelasan Layout: Tata letak simpel dan intuitif. Hindari antarmuka penuh teks; fokus
pada visual (gambar produk besar) dan iconografi yang mudah dipahami. Gunakan
prinsip whitespace agar konten tidak padat.
Responsivitas: Semua UI teruji mobile-friendly. Hamburger menu untuk navigasi di
perangkat kecil. Komponen NextUI sudah responsif.
Warna & Tipografi: Pilih palet warna yang modern namun elegan (misal kombinasi
biru gelap atau ungu untuk kesan gaming + aksen cerah untuk tombol/CTAs).
Tipografi jelas, gunakan font sans-serif profesional.
Microinteractions: Berikan umpan balik instan ke pengguna (hover effects, tombol
memberi warna saat diklik). Hal ini membuat UX lebih hidup.
Kecepatan dan Aksesibilitas: Hindari elemen berat yang memperlambat halaman.
Pastikan kontrast warna cukup untuk keterbacaan, ukuran font dapat diperbesar,
dan alt-text lengkap untuk gambar.
Sebagai catatan, riset menunjukkan pengguna rata-rata hanya butuh ~7 detik untuk
membentuk kesan pertama pada sebuah situs​ imaginarycloud.com . Oleh karena itu, landing
page dan homepage harus sangat memikat dan mudah dipahami

imaginarycloud.com

.

9. Rekomendasi Libraries/Tools Tambahan
Supabase Realtime / Socket.IO: Jika kebutuhan chat/notification lebih kompleks,
bisa gunakan Socket.IO atau Pusher sebagai alternatif ke Supabase Realtime.
Next.js i18n (bawaan) + next-intl: Untuk lokalitas. Next.js v10+ mendukung routing
berlokasi​ nextjs.org .
Algolia / ElasticSearch: Untuk fitur pencarian cepat dan filter kompleks.
Zod atau Yup: Validasi data di front-end/back-end.
Sentry: Monitoring error production.
Storybook: Dokumentasi UI components terpusat.
Docker + Kubernetes (opsional): Containerisasi dan orkestrasi untuk skala besar.
CI/CD & Testing: GitHub Actions/GitLab CI untuk otomatisasi build/test/deploy.
Jest/Cypress untuk testing unit/integrasi.

10. Prioritas Pengembangan (MVP vs Fitur Lanjutan)
MVP (Tahap Awal):
1. Autentikasi pengguna (daftar/login).
2. CRUD listing produk/gold/jasa.
3. Halaman marketplace dan detail produk.
4. Chat dasar antar pengguna.
5. Proses pembelian dengan Xendit (pembayaran + holding dana).
6. Halaman konfirmasi pesanan & dashboard sederhana.
7. Panel admin minimal untuk menyetujui transaksi.
8. Rating sederhana (5 bintang tanpa fitur lanjutan).
Fitur Tahap Lanjut:
1. Ulasan lengkap & sistem reputasi pengguna.
2. Notifikasi real-time & push.
3. Sistem dispute resolution.
4. Lokalisasi bahasa dan multi-mata uang.
5. Advanced search dengan faceted filtering (Algolia).
6. Dashboard admin lebih detail (laporan, analitik, pengaturan platform).
7. Mobile app atau PWA.
Pendekatan MVP memastikan fitur inti (transaksi, listing, chat) stabil terlebih dahulu, lalu
iterasi menambahkan fitur kompleks berdasarkan masukan pengguna.

11. Keamanan, Skalabilitas, dan Kepatuhan Pembayaran
SEA
Keamanan:
HTTP Headers: Terapkan Helmet.js untuk mengatur header keamanan penting
seperti CSP dan XSS protection​ helmetjs.github.io .

Enkripsi & Proteksi Data: Simpan password hashed secara aman (Supabase
menangani tokenisasi). Gunakan HTTPS/TLS untuk semua komunikasi. Enkripsi
data sensitif di database (misal lampiran identitas).
Validasi & Sanitasi: Gunakan validasi ketat (Zod/Yup) untuk mencegah injeksi
SQL/NoSQL. CSRF token untuk form sensitif.
Rate Limiting & Captcha: Batasi permintaan API untuk mencegah brute-force.
Gunakan reCAPTCHA pada form login/register untuk antispam.
2FA (opsional): Untuk akun dengan transaksi besar, sediakan opsi two-factor
authentication sebagai lapisan keamanan ekstra.
Audit & Logging: Simpan log lengkap (login, perubahan status transaksi).
Siapkan mekanisme alert jika terdeteksi aktivitas mencurigakan.
Skalabilitas:
Arsitektur Cloud: Supabase/PostgreSQL secara natural mendukung skala
vertikal/horizontal. Next.js bisa deploy di Vercel atau platform cloud (AWS, GCP)
dengan CDN untuk asset statis.
Caching: Gunakan caching (Redis atau Cloudflare) untuk data yang sering
diakses (misal daftar produk populer) agar mengurangi beban database.
Desain Statless: Backend API dirancang stateless sehingga dapat diskalakan ke
beberapa server. Gunakan load balancer bila diperlukan.
Database Optimization: Index kolom yang sering dicari (user_id, status
transaksi). Pemantauan performa DB.
Auto Scaling: Pantau beban dan gunakan auto-scaling (termasuk Supabase
“Serverless Postgres” jika tersedia) untuk trafik puncak.
Kepatuhan Pembayaran & Regulasi SEA:
Xendit & AML: Karena Xendit (Payment Gateway) menangani transaksi uang, ia
sudah mematuhi regulasi lokal dan menerapkan pemeriksaan AML.
Sebagaimana disebutkan Persona (2024), PSP bertanggung jawab atas
kepatuhan AML, tetapi platform tetap harus menerapkan langkah antisipasi
penipuan​ withpersona.com ​ withpersona.com . Maka, meski Xendit mengurus verifikasi
dasar, kami tetap melakukan verifikasi KYC pada seller (upload KTP/KITAS jika
diperlukan) serta pemeriksaan tambahan sesuai risiko.

KYC & Verifikasi: Pada saat onboarding seller, lakukan verifikasi identitas dasar
(scan ID). Jika volume transaksi besar, persyaratan KYC bisa ditingkatkan.
Transaksi Lintas-Batas: Sesuaikan dengan pajak dan kurs di tiap negara.
Misalnya, beri opsi pajak/regulasi sesuai lokal (PPh di Indonesia, VAT di
Malaysia) melalui status harga.
Perlindungan Konsumen: Cantumkan Syarat & Ketentuan, Kebijakan Refund,
sesuai hukum e-commerce lokal (misal aturan Kominfo di Indonesia, PDPA di
Malaysia/Singapura). Hal ini mencakup transparansi fee Xendit, limit
chargeback, dan waktu refund.
Privasi Data: Patuhi aturan perlindungan data (PDP di Indonesia, PDPA
Malaysia/Singapura, dll). Simpan data pengguna dengan aman, berikan opsi
pengguna menghapus/unduh data pribadi jika diminta (fitur GDPR-like).
Integrasi Multi-Mata Uang: Xendit mendukung pembayaran lokal di negara
SEA (Idr, PHP, THB, dll). Pastikan frontend menampilkan mata uang lokal sesuai
region pengguna dan mengonversi saat checkout.
Keamanan Pembayaran: Gunakan metode 3DSecure (OTP bank) jika didukung.
Jangan simpan nomor kartu kredit – gunakan payment link Xendit yang
mengalihkan transaksi ke portal aman mereka.
Dengan perhatian pada keamanan dan kepatuhan di atas, platform akan menjadi andal,
aman, dan siap bersaing di pasar SEA.

Rencana ini dirancang dengan semangat antusiasme dan fokus menyeluruh: setiap aspek
produk dipikirkan agar platform game marketplace yang dihasilkan modern, aman, dan
sesuai kebutuhan pengguna. Kami siap mewujudkan visi ini menjadi kenyataan!

Citations
Marketplace transaction flow: how and when to make seller payouts - Cobbleweb
https://www.cobbleweb.co.uk/seller-payout-guide-for-online-marketplaces/

Architecture | Supabase Docs

https://supabase.com/docs/guides/getting-started/architecture

Architecture | Supabase Docs
https://supabase.com/docs/guides/getting-started/architecture

Helmet.js
https://helmetjs.github.io/

Using Real-Time Chat to Optimize Marketplace Engagement & Boost Conversio…
https://quickblox.com/blog/real-time-chat-for-marketplaces/

Frontiers | Reviews, trust, and customer experience in online marketplaces: the c…
https://www.frontiersin.org/journals/communication/articles/10.3389/fcomm.2024.1460321/full

How to build an online marketplace in 2025
https://www.imaginarycloud.com/blog/how-to-build-an-online-marketplace-in-2022-a-completeguide

Routing: Internationalization | Next.js
https://nextjs.org/docs/pages/building-your-application/routing/internationalization

Are Marketplaces Responsible For AML? | Persona
https://withpersona.com/blog/marketplaces-responsible-for-aml

Are Marketplaces Responsible For AML? | Persona
https://withpersona.com/blog/marketplaces-responsible-for-aml

All Sources
cobbleweb.co

supabase

imaginarycloud

nextjs

helmetjs.github
withpersona

quickblox

frontiersin

